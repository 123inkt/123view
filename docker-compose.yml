version: '3'

services:
    nginx:
        container_name: ${NGINX_CONTAINER:-nginx}
        build:
            args:
                VERSION: $NGINX_VERSION
            context: .
            dockerfile: ./docker/nginx/Dockerfile
        ports:
            - ${NGINX_PORT:-8080}:80
            - ${NGINX_SSL_PORT:-8443}:443
        volumes:
            - ./public:/app/public
        depends_on:
            - php-fpm

    php-fpm:
        container_name: ${PHP_CONTAINER:-php-fpm}
        build:
            args:
                VERSION: $PHP_VERSION
            context: .
            dockerfile: ./docker/php-fpm/Dockerfile
        environment:
            PHP_MEMORY_LIMIT: $PHP_MEMORY_LIMIT
            HOME: /home/123view
        depends_on:
            mysql:
                condition: service_healthy
            rabbitmq:
                condition: service_healthy
            nodejs:
                condition: service_started
            mail:
                condition: service_started
        volumes:
            - .:/app:rw

    mysql:
        container_name: ${MYSQL_CONTAINER:-mysql}
        build:
            args:
                VERSION: $MYSQL_VERSION
            context: ./docker/mysql
        cap_add:
            - SYS_NICE  # CAP_SYS_NICE
        ports:
            - ${MYSQL_PORT:-3306}:3306
        healthcheck:
            test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
            timeout: 20s
            retries: 10
        volumes:
            - ${MYSQL_DATA_DIR}:/var/lib/mysql

    rabbitmq:
        container_name: ${RABBITMQ_CONTAINER:-rabbitmq}
        image: bitnami/rabbitmq:latest
        healthcheck:
            test: rabbitmq-diagnostics check_port_connectivity
            interval: 1s
            timeout: 5s
            retries: 30

    mail:
        container_name: ${MAIL_CONTAINER:-mail}
        image: bytemark/smtp

    nodejs:
        container_name: ${NODEJS_CONTAINER:-nodejs}
        build:
            context: .
            dockerfile: ./docker/nodejs/Dockerfile
        environment:
            NODEJS_HOST: ${HIGHLIGHTJS_HOST}
            NODEJS_PORT: ${HIGHLIGHTJS_PORT}
        volumes:
            - .:/app:rw

    mercure:
        container_name: ${MERCURE_CONTAINER:-mercure}
        build:
            args:
                VERSION: $MERCURE_VERSION
            context: .
            dockerfile: ./docker/mercure/Dockerfile
        environment:
            GLOBAL_OPTIONS: |
                auto_https    off
                http_port     6080
                https_port    6443
            SERVER_NAME: |
                ${APP_HOSTNAME}, mercure, localhost
                tls /etc/ssl/certs/123view-cert.crt /etc/ssl/private/123view-cert.key
            MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_JWT_SECRET}
            MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_JWT_SECRET}
            MERCURE_EXTRA_DIRECTIVES: |
                cors_origins  https://${APP_HOSTNAME}:${NGINX_SSL_PORT}  https://${APP_HOSTNAME}
        ports:
            - ${MERCURE_SSL_PORT:-6443}:6443

networks:
    default:
        name: 123view-network
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: ${DOCKER_SUBNET}
